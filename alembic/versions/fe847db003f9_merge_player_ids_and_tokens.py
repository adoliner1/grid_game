"""merge_player_ids_and_tokens

Revision ID: fe847db003f9
Revises: 76b226733675
Create Date: 2024-11-07 12:36:42.730100

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fe847db003f9'
down_revision: Union[str, None] = '76b226733675'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('games', 'player1_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('games', 'player2_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('games', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('games', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('fk_games_player1_id', 'games', type_='foreignkey')
    op.drop_constraint('fk_games_player2_id', 'games', type_='foreignkey')
    op.drop_column('games', 'player1_token')
    op.drop_column('games', 'player2_token')
    op.alter_column('lobby_tables', 'player1_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('lobby_tables', 'player2_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('lobby_tables', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('lobby_tables', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('fk_lobby_tables_player1_id', 'lobby_tables', type_='foreignkey')
    op.drop_constraint('fk_lobby_tables_player2_id', 'lobby_tables', type_='foreignkey')
    op.drop_column('lobby_tables', 'player1_token')
    op.drop_column('lobby_tables', 'player2_token')
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'last_login',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_google_id_key', 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('users_google_id_key', 'users', ['google_id'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'last_login',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.add_column('lobby_tables', sa.Column('player2_token', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('lobby_tables', sa.Column('player1_token', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('fk_lobby_tables_player2_id', 'lobby_tables', 'users', ['player2_id'], ['id'])
    op.create_foreign_key('fk_lobby_tables_player1_id', 'lobby_tables', 'users', ['player1_id'], ['id'])
    op.alter_column('lobby_tables', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('lobby_tables', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('lobby_tables', 'player2_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('lobby_tables', 'player1_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.add_column('games', sa.Column('player2_token', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('games', sa.Column('player1_token', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('fk_games_player2_id', 'games', 'users', ['player2_id'], ['id'])
    op.create_foreign_key('fk_games_player1_id', 'games', 'users', ['player1_id'], ['id'])
    op.alter_column('games', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('games', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('games', 'player2_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('games', 'player1_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    # ### end Alembic commands ###
