"""empty message

Revision ID: 5228358e16f9
Revises: cf09db0a3441
Create Date: 2024-08-16 13:14:50.018858

"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5228358e16f9'
down_revision: Union[str, None] = 'cf09db0a3441'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    # Create the Enum type
    lobby_status = postgresql.ENUM('Waiting', 'Full', name='lobby_status', create_type=False)
    lobby_status.create(op.get_bind(), checkfirst=True)

    # Commands auto generated by Alembic - please adjust!
    op.drop_index('ix_players_id', table_name='players')
    op.drop_index('ix_players_name', table_name='players')
    op.drop_table('players')
    op.add_column('games', sa.Column('player1_token', sa.String(), nullable=True))
    op.add_column('games', sa.Column('player2_token', sa.String(), nullable=True))
    op.add_column('games', sa.Column('game_state', sa.JSON(), nullable=True))
    op.drop_index('ix_games_name', table_name='games')
    op.drop_index('ix_games_status', table_name='games')
    op.drop_column('games', 'name')
    op.add_column('lobby_tables', sa.Column('player1_token', sa.String(), nullable=True))
    op.add_column('lobby_tables', sa.Column('player2_token', sa.String(), nullable=True))
    
    # Modify the status column with an explicit USING clause
    op.execute('ALTER TABLE lobby_tables ALTER COLUMN status TYPE lobby_status USING status::text::lobby_status')
    
    op.drop_index('ix_lobby_tables_status', table_name='lobby_tables')

def downgrade() -> None:
    # Commands auto generated by Alembic - please adjust!
    op.create_index('ix_lobby_tables_status', 'lobby_tables', ['status'], unique=False)
    op.alter_column('lobby_tables', 'status',
               existing_type=postgresql.ENUM('Waiting', 'Full', name='lobby_status'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('lobby_tables', 'player2_token')
    op.drop_column('lobby_tables', 'player1_token')
    op.add_column('games', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index('ix_games_status', 'games', ['status'], unique=False)
    op.create_index('ix_games_name', 'games', ['name'], unique=False)
    op.drop_column('games', 'game_state')
    op.drop_column('games', 'player2_token')
    op.drop_column('games', 'player1_token')
    op.create_table('players',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('game_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lobby_table_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name='players_game_id_fkey'),
    sa.ForeignKeyConstraint(['lobby_table_id'], ['lobby_tables.id'], name='players_lobby_table_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='players_pkey')
    )
    op.create_index('ix_players_name', 'players', ['name'], unique=False)
    op.create_index('ix_players_id', 'players', ['id'], unique=False)
    
    # Drop the Enum type
    lobby_status = postgresql.ENUM('Waiting', 'Full', name='lobby_status', create_type=False)
    lobby_status.drop(op.get_bind(), checkfirst=True)